<?php

namespace BlogBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;
use BlogBundle\Entity\Tag;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{
  public function getById($id)
  {
    try{
      $article = $this
        ->createQueryBuilder('p')
        ->where('p.id = :id')
        ->setParameter('id', $id)
        ->getQuery()
        ->getSingleResult();

        return $article;
    } catch (\Exception $ex){
         return null;
    }
  }

  public function getLastFive()
  {
    try{
      $articles = $this
        ->createQueryBuilder('p')
        ->orderby('p.postDate', 'DESC')
        ->setMaxResults(5)
        ->where('p.postDate <= :date')
        ->setParameter('date', new \DateTime())
        ->getQuery()
        ->getResult();

        return $articles;
    } catch (\Exception $ex){
         return null;
    }
  }

  public function getList($page=1, $maxperpage=5)
  {
    $q = $this->_em->createQueryBuilder()
        ->select('article')
        ->from('BlogBundle:Article','article')
        ->where('article.postDate <= :date')
        ->setParameter('date', new \DateTime())
        ->orderby('article.postDate', 'DESC');

    $q->setFirstResult(($page-1) * $maxperpage)
      ->setMaxResults($maxperpage);
    return new Paginator($q);
  }

  public function getListByCategory($page=1, $maxperpage=5, $category)
  {
    $q = $this->_em->createQueryBuilder()
        ->select('article')
        ->from('BlogBundle:Article','article')
        ->where('article.category = :category')
        ->andWhere('article.postDate <= :date')
        ->setParameter('date', new \DateTime())
        ->orderby('article.postDate', 'DESC');

    $q->setParameter('category', $category);

    $q->setFirstResult(($page-1) * $maxperpage)
        ->setMaxResults($maxperpage);
    return new Paginator($q);
  }

  public function getListBySearch($page=1, $maxperpage=5, $queryFilterTab)
  {
    $q = $this->_em->createQueryBuilder()
                    ->select('article')
                    ->from('BlogBundle:Article','article')
                    ->where('article.postDate <= :date')
                    ->setParameter('date', new \DateTime());

    if(isset($queryFilterTab['tagName'])) {
        $q->innerJoin('article.tags', 't', 'WITH', 't.name LIKE :tag_name')
          ->setParameter('tag_name', '%'.$queryFilterTab['tagName'].'%');
    }

    if(isset($queryFilterTab['title'])){
        $q->andWhere('article.title LIKE :title')
          ->setParameter('title', '%'.$queryFilterTab['title'].'%');
    }

    $q->orderBy('article.postDate', 'DESC');

    $q->setFirstResult(($page-1) * $maxperpage)
        ->setMaxResults($maxperpage);

    return new Paginator($q);
  }
}
